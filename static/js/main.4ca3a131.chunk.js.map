{"version":3,"sources":["components/Navbar/Navbar.js","components/zApplicationDetails/PretendApplicationCard.js","components/zApplicationDetails/Home.js","models/companyModel.js","models/connectionModel.js","models/jobModel.js","components/zApplicationDetails/Job/Job.js","components/zApplicationDetails/Job/JobList.js","components/zApplicationDetails/Connection/Connection.js","components/zApplicationDetails/Connection/ConnectionList.js","components/zApplicationDetails/Company/Company.js","pages/Company/CompanyCntr/CompanyCntr.js","pages/Company/CompanyCntr/EditCompanyCntr.js","pages/Company/CompanyCntr/NewCompanyCntr.js","components/zApplicationDetails/Company/CompanyDelete.js","components/zApplicationDetails/Company/CompanyOverview.js","components/zApplicationDetails/Company/CompanyList.js","pages/Company/CompanyListCntr/CompanyListCntr.js","pages/Job/JobCntr/EditJobCntr.js","pages/Job/JobCntr/NewJobCntr.js","components/zApplicationDetails/Job/JobDelete.js","pages/Job/JobListCntr/JobListCntr.js","pages/Connection/ConnectionCntr/EditConnectionCntr.js","pages/Connection/ConnectionCntr/NewConnectionCntr.js","components/zApplicationDetails/Connection/ConnectionDelete.js","pages/Connection/ConnectionListCntr/ConnectionListCntr.js","config/routes.js","App.js","index.js"],"names":["NavBar","className","to","exact","PretendApplicationCard","applicationStatusList","Home","props","console","log","id","name","size","url","CompanyModel","getAllCompanies","fetch","then","response","json","getCompanyById","companyId","createCompany","company","method","headers","body","JSON","stringify","catch","err","updateCompany","deleteCompany","ConnectionModel","getConnectionById","connectionId","createConnection","connection","updateConnection","deleteConnection","JobModel","getJobById","jobId","createJob","job","updateJob","deleteJob","Job","applicationDate","Date","toDateString","nextStepsDate","_id","href","jobURL","target","jobTitle","jobLocation","nextSteps","applicationStatus","jobNotes","jobDescription","JobList","jobList","companyName","noJobs","jobs","map","Obj","key","length","Connection","connectionName","connectionLinkedin","connectionEmail","ConnectionList","connectionList","noConnections","connections","Company","companyWebsite","companyCareersPage","companyLinkedin","employeeCount","companyHQ","companyGlassdoor","glassdoorScore","CompanyContainer","state","this","match","params","result","setState","React","Component","withRouter","EditCompanyCntr","handleChage","event","value","handleSubmit","preventDefault","history","goBack","onSubmit","htmlFor","onChange","type","NewCompanyCntr","push","CompanyDelete","goHome","onClick","CompanyList","companyList","companies","CompanyOverview","CompanyListCntr","fetchData","data","EditJobCntr","handleChange","co_id","form","NewJobCntr","onInput","JobDelete","JobListCntr","getAllJobs","EditConnectionCntr","NewConnectionCntr","ConnectionDelete","ConnectionListCntr","getAllConnections","path","component","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ca3a131.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./Navbar.css\"\n\nfunction NavBar() {\n  return (\n    <nav>\n      <div className=\"container\">\n        <NavLink className=\"logo\" to=\"/\">\n          <h1>appTrac</h1>\n        </NavLink>\n\n        <ul className=\"nav-list\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" exact to=\"/companies\">\n              Companies\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/login\">\n              Login\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/register\">\n              Register\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" exact to=\"/Logout\">\n              Logout\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from 'react'\n\nexport default function PretendApplicationCard() {\n  return (\n      <div className=\"application-card\">\n        <section className=\"application-content-wrapper\">\n          <h4>google</h4>\n          <p>software engineer</p>\n          <p>Applied On: 8/20/20</p>\n          <p>Complete Assignment</p>\n          <p>By: 8/22/20</p>\n        </section>\n      </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import \"../zApplicationDetails/ApplicationDetails.css\";\nimport \"../Application/Application.css\"\nimport PretendApplicationCard from \"./PretendApplicationCard\"\n\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// const FA = require(\"react-fontawesome\");\n// React.render(<FA name=\"rocket\" />, document.body);\n// import ReactDOM from 'react-dom'import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'import { faCoffee } from '@fortawesome/free-solid-svg-icons' const element = <FontAwesomeIcon icon={faCoffee} /> ReactDOM.render(element, document.body)\n// import ReactDOM from \"react-dom\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// const element = <FontAwesomeIcon icon={chevronright} />;\n// ReactDOM.render(element, document.body);\n\nimport { render } from \"react-dom\";\n// get our fontawesome imports\nimport FontAwesome from \"react-fontawesome\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// // create our App\n// const App = () => (\n//   <div>\n//     <FontAwesomeIcon icon={faHome} />\n//   </div>\n// );\n\n// render to #root\n// render(<App />, document.getElementById(\"root\"));\n\n\n\n\n\n\nlet applicationStatusList = [\n  \"Interested\",\n  \"Applied\",\n  \"Phone Screen\",\n  \"Phone Interview\",\n  \"Test/HW\",\n  \"In Person/Zoom\",\n  \"Offer\",\n  \"Rejected\",\n  \"No Openings\",\n];\n\nfunction Home(props) {\n  console.log(props, \"props from HOME\");\n  return (\n    <div className=\"home\">\n      <Link to=\"/companies/new\">\n        <button className=\"buttons\" id=\"add-new-home\">\n          + Add New\n        </button>\n      </Link>\n\n      {/* -----------------------------first row */}\n      <div className=\"status-cards\">\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"interested\">{applicationStatusList[0]}</div>\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome\n              name=\"chevron-left\"\n              size=\"2x\"\n              // spin\n              // style={{ textShadow: \"0 1px 0 rgba(0, 0, 0, 0.1)\" }}\n            />\n          </div>\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>\n        </div>\n\n        {/* -----------------------------second row */}\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"applied\">{applicationStatusList[1]}</div>\n\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome name=\"chevron-left\" size=\"2x\" />\n          </div>\n\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>\n        </div>\n\n        {/* -----------------------------second row */}\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"phone-screen\">{applicationStatusList[2]}</div>\n\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome name=\"chevron-left\" size=\"2x\" />\n          </div>\n\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>\n        </div>\n\n        {/* -----------------------------second row */}\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"phone-interview\">{applicationStatusList[3]}</div>\n\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome name=\"chevron-left\" size=\"2x\" />\n          </div>\n\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>\n        </div>\n\n        {/* -----------------------------second row */}\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"test-hw\">{applicationStatusList[4]}</div>\n\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome name=\"chevron-left\" size=\"2x\" />\n          </div>\n\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>\n        </div>\n\n        {/* -----------------------------second row */}\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"in-person\">{applicationStatusList[5]}</div>\n\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome name=\"chevron-left\" size=\"2x\" />\n          </div>\n\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>\n        </div>\n\n        {/* -----------------------------second row */}\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"offer\">{applicationStatusList[6]}</div>\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome name=\"chevron-left\" size=\"2x\" />\n          </div>\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>{\" \"}\n        </div>\n\n        {/* -----------------------------second row */}\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"rejected\">{applicationStatusList[7]}</div>\n\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome name=\"chevron-left\" size=\"2x\" />\n          </div>\n\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>\n        </div>\n\n        {/* -----------------------------second row */}\n        <div className=\"row\">\n          {/* A */}\n          <div id=\"no-openings\">{applicationStatusList[7]}</div>\n\n          {/* B */}\n          <div className=\"previous\">\n            <FontAwesome name=\"chevron-left\" size=\"2x\" />\n          </div>\n\n          {/* C */}\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          <PretendApplicationCard />\n          {/* D */}\n          <div className=\"next\">\n            <FontAwesome name=\"chevron-right\" size=\"2x\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","const deploy = `https://app-trac-m.herokuapp.com/companies`\nconst local = `http://localhost:4004/companies`;\n// const url = local;\nconst url = deploy;\n\nclass CompanyModel {\n  static getAllCompanies = () => {\n    return fetch(url).then((response) => response.json());\n  };\n\n  static getCompanyById = (companyId) => {\n    return fetch(`${url}/${companyId}`)\n    .then((response) => response.json());\n  };\n\n  static createCompany = (company) => {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(company)\n    })\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n  };\n\n  static updateCompany = (company, companyId) => {\n    return fetch(`${url}/${companyId}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(company)\n    }).then((response) => response.json());\n  };\n\n  static deleteCompany = (companyId) => {\n    return fetch(`${url}/${companyId}/delete`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n  };\n}\n\nexport default CompanyModel;\n","const deploy = `https://app-trac-m.herokuapp.com/companies`;\nconst local = `http://localhost:4004/companies`;\n// const url = local;\nconst url = deploy;\n\n// to create a connection we need a company id\n// will i always need a company id to access connections-yes\nclass ConnectionModel {\n  // static getAllConnections = () => {\n  //   return fetch(url).then((response) => response.json());\n  // };\n\n  static getConnectionById = (companyId, connectionId) => {\n    console.log(companyId)\n    return fetch(`${url}/${companyId}/connections/${connectionId}`).then((response) => response.json());\n  }; \n\n  static createConnection = (companyId, connection) => {\n    console.log(companyId)\n    // let connectionObj = {\n    //   connection: connection,\n    //   companyId: companyId,\n    // }\n    \n    return fetch(`${url}/${companyId}/connections`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(connection)\n    })\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n  };\n\n  static updateConnection = (companyId, connection, connectionId) => {\n    console.log(companyId)\n    // let connectionObj = {\n    //   connection: connection,\n    //   companyId: companyId,\n    // }\n    return fetch(`${url}/${companyId}/connections/${connectionId}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(connection)\n    }).then((response) => response.json());\n  };\n\n  static deleteConnection = (connectionId) => {\n    return fetch(`${url}/connections/${connectionId}/delete`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n  };\n}\n\nexport default ConnectionModel;\n","const deploy = `https://app-trac-m.herokuapp.com/companies`;\nconst local = `http://localhost:4004/companies`;\n// const url = local;\nconst url = deploy;\n\nclass JobModel {\n  // static getAllJobs = () => {\n  //   return fetch(url).then((response) => response.json());\n  // };\n\n  static getJobById = (companyId, jobId) => {\n    console.log(companyId)\n    return fetch(`${url}/${companyId}/jobs/${jobId}`).then((response) => response.json());\n  };\n\n  static createJob = (companyId, job) => {\n    console.log(companyId)\n    return fetch(`${url}/${companyId}/jobs`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(job)\n    })\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n  };\n\n  static updateJob = (companyId, job, jobId) => {\n    console.log(companyId)\n    return fetch(`${url}/${companyId}/jobs/${jobId}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(job)\n    }).then((response) => response.json());\n  };\n  \n  static deleteJob = (jobId) => {\n    return fetch(`${url}/jobs/${jobId}/delete`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n      .then((response) => response.json())\n      .catch((err) => console.log(err));\n  };\n}\n\n\nexport default JobModel;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport JobModel from '../../../models/jobModel';\n\n\nconst Job = (props) => {\n  let { job, companyId } = props;\n  console.log('props in job.js =', props)\n  \n  let applicationDate = new Date(job.applicationDate).toDateString();\n  let nextStepsDate = new Date(job.nextStepsDate).toDateString();\n  return (\n    <>\n      <div className=\"buttons\">\n        <Link to={`/companies/${companyId}/jobs/${job._id}/edit`}>\n          <button>Edit</button>\n        </Link>\n        <Link to={`/jobs/${job._id}/delete`}>\n          <button>Delete</button>\n        </Link>\n      </div>\n      <div className=\"content-wrapper-jobs\">\n        <div className=\"a-and-c\">\n          <section className=\"job-A\">\n            <a href={job.jobURL} target=\"_blank\">\n              {job.jobTitle}\n            </a>\n            <br />\n            {job.jobLocation}\n            <br />\n            Applied On: {applicationDate}\n            <br />\n            Next Steps: {job.nextSteps}\n            <br />\n            {job.applicationStatus} on {nextStepsDate}\n          </section>\n          <section className=\"job-C\">\n            NOTES <br /> {job.jobNotes}\n          </section>\n        </div>\n        <section className=\"job-B\">\n          <hr />\n          JOB DESCRIPTION <br /> {job.jobDescription}\n        </section>\n      </div>\n      {/* <JobForm companyId={props.companyId} /> */}\n    </>\n  );\n};\n\nexport default Job;\n","import React from \"react\";\nimport Job from \"./Job\";\nimport Home from \"../Home\"\n\nfunction JobList(props) {\n  console.log(\"jobs from jobslist\", props)\n  let jobList=[];\n  let companyName = props.companyName;\n  const noJobs = `Looks like you haven’t found any jobs at ${companyName}, when was the last time you looked at their careers page?`;\n\n  if (props.jobs) {\n    jobList = \n    props.jobs.map((Obj) => {\n      return (\n        <>\n        <Job\n          key={Obj._id}\n          job={Obj}\n          companyId={props.companyId}\n        />\n        {/* <Home\n          jobs={props.job}\n          companyId={company._id}\n          companyName={company.companyName}\n        /> */}\n        </>\n      );\n    });\n    if (jobList.length <= 0) {\n      return noJobs\n    }\n  }\n  return <div className=\"jobs-container\">{jobList}</div>;\n\n}\n\nexport default JobList;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport ConnectionModel from '../../../models/connectionModel';\n\n\nconst Connection = (props) => {\n  let { connection, companyId } = props;\n  console.log('props in connection.js =', props)\n  return (\n    <>\n      <div className=\"buttons\">\n        <Link to={`/companies/${companyId}/connections/${connection._id}/edit`}>\n          <button>Edit</button>\n        </Link>\n        <Link to={`/connections/${connection._id}/delete`}>\n          <button>Delete</button>\n        </Link>\n      </div>\n      <div className=\"content-wrapper-connections\">\n        {connection.connectionName} -\n        <a href={connection.connectionLinkedin} target=\"_blank\">\n          {\" \"}\n          LinkedIn{\" \"}\n        </a>\n        <br />\n        {connection.connectionEmail}\n      </div>\n    </>\n  );\n}\n\nexport default Connection;\n\n","import React from \"react\";\nimport Connection from \"./Connection\";\n\n\nfunction ConnectionList(props) {\n  let connectionList=[];\n  let companyName = props.companyName;\n  const noConnections =\n    `Looks like you don’t have any connections at ${companyName}. Go make one!`;\n\n  if (props.connections) {\n    connectionList = \n    props.connections.map((Obj) => {\n      return <Connection key={Obj._id} connection={Obj} companyId={props.companyId}/>;\n    });\n    if (connectionList.length <= 0) {\n      return noConnections;\n    }\n  }\n  \n  return <div className=\"connections-container\">{connectionList}</div>;\n  \n}\n\nexport default ConnectionList;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Home from \"../Home\"\nimport CompanyModel from '../../../models/companyModel';\n// import JobModel from \"../../../models/jobModel\";\nimport ConnectionModel from \"../../../models/connectionModel\";\n\nimport JobList from '../Job/JobList'\nimport ConnectionList from \"../Connection/ConnectionList\";\n\nimport '../../zApplicationDetails/ApplicationDetails.css'\n\nconst Company = (props) => {\n  let { company } = props;\n  // console.log(\"props in company.js =\", props);\n\n\n  return (\n    <div className=\"application-details\">\n      {/* company----------------------------------- start */}\n      <div className=\"company\">\n        <section className=\"company-section\">\n          <div className=\"section-header\">\n            <h3>Company</h3>\n\n            <div className=\"buttons\">\n              <Link to={`/companies/${company._id}/edit`}>\n                <button>Edit</button>\n              </Link>\n              <Link to={`/companies/${company._id}/delete`}>\n                <button>Delete</button>\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"content-wrapper-companies\">\n            <section className=\"company-overview\">\n              <a href={company.companyWebsite} target=\"_blank\">\n                <span> {company.companyName} </span>\n              </a>{\" \"}\n              |\n              <a href={company.companyCareersPage} target=\"_blank\">\n                {\" \"}\n                Careers{\" \"}\n              </a>{\" \"}\n              |<a href={company.companyLinkedin}> Linkedin </a> <br />\n              Employees: {company.employeeCount} <br />\n              HQ: {company.companyHQ} <br />\n              <a href={company.companyGlassdoor}> Glassdoor: </a> {\"  \"}\n              {company.glassdoorScore}\n            </section>\n          </div>\n        </section>\n      </div>\n\n      <div className=\"jobs-connections\">\n        {/* job----------------------------------- start */}\n        <section className=\"jobs-section\">\n          <div className=\"section-header\">\n            <h3>Jobs</h3>\n            <div className=\"buttons\">\n              <Link to={`/companies/${company._id}/jobs/new`}>\n                <button>Add</button>\n              </Link>\n            </div>\n          </div>\n          <JobList\n            jobs={props.job}\n            companyId={company._id}\n            companyName={company.companyName}\n          />\n        </section>\n\n        {/* connections----------------------------------- start */}\n        <section className=\"connections-section\">\n          <div className=\"section-header\">\n            <h3>Connections</h3>\n            <div className=\"buttons\">\n              <Link to={`/companies/${company._id}/connections/new`}>\n                <button>Add</button>\n              </Link>\n            </div>\n          </div>\n          <ConnectionList\n            connections={props.connection}\n            companyId={company._id}\n            companyName={company.companyName}\n          />\n        </section>\n        \n      </div>  \n    </div>\n  );\n};\n\nexport default Company;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport CompanyModel from '../../../models/companyModel'\n// import JobModel from \"../../../models/jobModel\";\n// import ConnectionModel from \"../../../models/jobModel\";\n\nimport Company from '../../../components/zApplicationDetails/Company/Company'\n\nclass CompanyContainer extends React.Component {\n  state = {\n    company: {},\n    job: [],\n    connection: [],\n  };\n\n  componentDidMount() {\n    // console.log(this.props, \"from inside comp did mount -- Company\");\n    // console.log(this.props.match.params.id);\n    CompanyModel.getCompanyById(this.props.match.params.id)\n      .then((result) => {\n        console.log(result, \"THIS IS THE RESULT\");\n\n        // result.jobs.map((jobId) => {\n        //   JobModel.getJobById(jobId).then((jobResult) => {\n        //     this.setState({ job: [...this.state.job, jobResult] });\n        //   });\n        // });\n\n        // result.connections.map((connectionId) => {\n        //   // console.log(connectionId)\n        //   ConnectionModel.getConnectionById(connectionId).then(\n        //     (connectionResult) => {\n        //       console.log(connectionResult, '***')\n        //       this.setState({\n        //         connection: [...this.state.connection, connectionResult],\n        //       });\n        //     });\n        // });\n\n        this.setState({\n          company: result,\n          job: result.jobs,\n          connection: result.connections,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n\n  render() {\n    // console.log(\"i am inside the render of company cntr\");\n    // console.log(this.props);\n    return (\n      <Company\n        company={this.state.company}\n        job={this.state.job}\n        connection={this.state.connection}\n      />\n    );\n    // return <h1> this is the company container</h1>\n  }\n}\n\nexport default withRouter(CompanyContainer);\n\n\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport CompanyModel from \"../../../models/companyModel\";\n\n\nclass EditCompanyCntr extends React.Component {\n  state = {\n    companyName: \"\",\n    companyName: \"\",\n    companyWebsite: \"\",\n    companyCareersPage: \"\",\n    companyLinkedin: \"\",\n    employeeCount: 0,\n    companyHQ: \"\",\n    companyGlassdoor: \"\",\n    glassdoorScore: 0,\n  };\n  \n  componentDidMount() {\n    CompanyModel.getCompanyById(this.props.match.params.id)\n      .then((result) => this.setState(result))\n      .catch((err) => console.log(err));\n  }\n\n  handleChage = (event) => {\n    console.log(event.target.id);\n    if (event.target.value === \"on\") {\n      event.target.value = true;\n    }\n\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    CompanyModel.updateCompany(this.state, this.props.match.params.id)\n    .then((result) => {\n      console.log(this.props);\n      console.log(this.props.match.params.id)\n      console.log(result);\n    });\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { companyName, companyWebsite, companyCareersPage, companyLinkedin, employeeCount, companyHQ, companyGlassdoor, glassdoorScore } = this.state;\n\n    return (\n      // <h1>hello from edit comp cntr</h1>\n      <div className=\"new-company\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>Edit Company</h2>\n          <div>\n            <label htmlFor=\"\">Company</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"companyName\"\n              value={companyName}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Company's Website</label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"companyWebsite\"\n              value={companyWebsite}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Careers Page</label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"companyCareersPage\"\n              value={companyCareersPage}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Company's Linkedin</label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"companyLinkedin\"\n              value={companyLinkedin}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Employees</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"employeeCount\"\n              value={employeeCount}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">HQ</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"companyHQ\"\n              value={companyHQ}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Glassdoor</label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"companyGlassdoor\"\n              value={companyGlassdoor}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Glassdoor Score</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"glassdoorScore\"\n              value={glassdoorScore}\n            />\n          </div>\n          <button className=\"buttons\" id=\"add-company\"  type=\"submit\">\n            Save{\" \"}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(EditCompanyCntr);\n\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport CompanyModel from \"../../../models/companyModel\";\n\n\nclass NewCompanyCntr extends React.Component {\n  state = {\n    companyName: \"\",\n    companyName: \"\",\n    companyWebsite: \"\",\n    companyCareersPage: \"\",\n    companyLinkedin: \"\",\n    employeeCount: 0,\n    companyHQ: \"\",\n    companyGlassdoor: \"\",\n    glassdoorScore: 0,\n  };\n\n  handleChage = (event) => {\n    console.log(event.target.id);\n    if (event.target.value === \"on\") {\n      event.target.value = true;\n    }\n\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.props, \"this is props\")\n    CompanyModel.createCompany(this.state)\n      .then((result) => {\n        console.log(result, \"this is the resulttttttttttttt\");\n        this.props.history.push(`/companies/${result._id}`)\n        // this.props.history.goBack();\n      });\n  };\n\n\n  render() {\n    \n    return (\n      <div className=\"new-company\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>Add A New Company</h2>\n          <div>\n            <label htmlFor=\"\">Company</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"companyName\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Company's Website</label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"companyWebsite\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Careers Page</label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"companyCareersPage\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Company's Linkedin</label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"companyLinkedin\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Employees</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"employeeCount\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">HQ</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"companyHQ\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Glassdoor</label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"companyGlassdoor\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Glassdoor Score</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"glassdoorScore\"\n            />\n          </div>\n          <button className=\"buttons\" type=\"submit\" id=\"add-company\">Add Company</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(NewCompanyCntr);\n","import React from \"react\";\n\nimport CompanyModel from \"../../../models/companyModel\";\n\n\nconst CompanyDelete = (props) => {\n  let goBack = () => props.history.goBack();\n  let goHome = () => props.history.push('/companies');\n\n  let companyId = props.match.params.id\n  console.log(props)\n  console.log(props.match.params.id);\n  return (\n    // <div>hello from compdelete.js</div>\n    <div className=\"\">\n      Are you sure you want to delete this Company?\n      <br />\n      <button onClick={goBack}>Back</button>\n      <button onClick={() => CompanyModel.deleteCompany(companyId).then(goHome)}>Delete</button>\n    </div>\n  );\n};\n\nexport default CompanyDelete;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import CompanyModel from '../../../models/companyModel';\n// import JobModel from \"../../../models/jobModel\";\nimport ConnectionModel from \"../../../models/connectionModel\";\n\nimport JobList from \"../Job/JobList\";\nimport ConnectionList from \"../Connection/ConnectionList\";\n\nimport \"../../zApplicationDetails/ApplicationDetails.css\";\n\nconst Company = (props) => {\n  let { company } = props;\n  // console.log(\"props in company.js =\", props);\n\n  return (\n    <Link to={`/companies/${company._id}`}>\n      <div className=\"company-overview-details\">\n        <section className=\"company-list\">\n          <div className=\"content-wrapper-companies\">\n            <section className=\"company-overview\">\n              <a href={company.companyWebsite} target=\"_blank\">\n                <h3>{company.companyName}</h3>\n              </a>\n              <a href={company.companyCareersPage} target=\"_blank\">\n                Careers{\" \"}\n              </a>{\" \"}\n              |<a href={company.companyLinkedin}> Linkedin </a> <br />\n              Employees: {company.employeeCount} <br />\n              HQ: {company.companyHQ} <br />\n              <a href={company.companyGlassdoor}> Glassdoor </a> -{\" \"}\n              {company.glassdoorScore}\n            </section>\n          </div>\n        </section>\n      </div>\n    </Link>\n  );\n};\n\nexport default Company;\n","import React from \"react\";\nimport CompanyOverview from \"./CompanyOverview\";\n\n\nfunction CompanyList(props) {\n  let companyList = []\n  const noCompanies = \"no companies?\";\n  \n  if (props.companies) {\n    companyList =\n    props.companies.map((Obj) => {\n      return <CompanyOverview key={Obj._id} company={Obj}/>;\n    });\n  }\n  if (companyList.length <= 0) {\n    return noCompanies;\n  }\n  return <div className=\"companies-container\">{companyList}</div>;\n\n}\n\nexport default CompanyList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CompanyModel from \"../../../models/companyModel\";\nimport CompanyList from \"../../../components/zApplicationDetails/Company/CompanyList\";\n\nimport \"../../../components/zApplicationDetails/ApplicationDetails.css\"\n\nclass CompanyListCntr extends React.Component {\n  state = {\n    companies: [],\n  };\n\n  componentDidMount() {\n    console.log(\"COMPANY #4 hello from inside comp did mount\");\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    CompanyModel.getAllCompanies().then((data) => {\n      console.log(\"COMPANY #5 this is the data fetched\", data);\n      this.setState({ companies: data });\n    });\n  };\n\n  render() {\n    console.log(\"COMPANY #1 and #2 hello in render\", this.state.companies);\n    return (\n      <div>\n          <Link to=\"/companies/new\">\n            <button className=\"buttons\" id=\"add-new-companies\">+ Add New</button>\n          </Link>\n          <CompanyList companies={this.state.companies}/>\n      </div>\n    );\n  }\n}\n\nexport default CompanyListCntr;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport JobModel from \"../../../models/jobModel\";\n\n\nclass EditJobCntr extends React.Component {\n  state = {\n    applicationDate: Date(),\n    applicationStatus: \"\",\n\n    nextSteps: \"\",\n    nextStepsDate: Date(),\n\n    jobTitle: \"\",\n    jobURL: \"\",\n    jobLocation: \"\",\n    jobDescription: \"\",\n\n    jobNotes: \"\",\n  };\n\n  componentDidMount() {\n    let companyId = this.props.match.params.co_id\n    let jobId = this.props.match.params.id\n    console.log(companyId)\n    console.log(jobId)\n\n    JobModel.getJobById(companyId, jobId)\n      .then((result) => {\n        console.log(result, \"this is the result -------\")\n        this.setState(result)\n      })\n      .catch((err) => console.log(err));\n  }\n\n  handleChange = (event) => {\n    console.log(event.target.id);\n    if (event.target.value === \"on\") {\n      event.target.value = true;\n    }\n\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let companyId = this.props.match.params.co_id\n    let jobId = this.props.match.params.id\n    JobModel.updateJob(companyId, this.state, jobId).then(\n      (result) => {\n        console.log(this.props);\n        console.log(this.props.match.params.id)\n        console.log(result);\n      }\n    );\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { applicationDate, applicationStatus, nextSteps, nextStepsDate, jobTitle, jobURL,jobLocation, jobDescription, jobNotes } = this.state;\n    return (\n      <div className=\"new-job\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>Add A New Job</h2>\n          <div>\n            <label htmlFor=\"\">Job Title</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"jobTitle\"\n              value={jobTitle}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Job Posting</label>\n            <input\n              onChange={this.handleChange}\n              type=\"url\"\n              name=\"jobURL\"\n              value={jobURL}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Job Location</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"jobLocation\"\n              value={jobLocation}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Job Description</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"jobDescription\"\n              value={jobDescription}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Applied On </label>\n            <input\n              onChange={this.handleChange}\n              type=\"date\"\n              name=\"applicationDate\"\n              value={applicationDate}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Application Status</label>\n            <select\n              id=\"application-status\"\n              name=\"app-stat-list\"\n              value={applicationStatus}\n              form=\"app-stat-form\"\n            >\n              <option value=\"interested\">Interested</option>\n              <option value=\"applied\">Applied</option>\n              <option value=\"phone-creen\">Phone Screen</option>\n              <option value=\"phone-interview\">Phone Interview</option>\n              <option value=\"test-hW\">Test/HW</option>\n              <option value=\"in-person-zoom\">In Person/Zoom</option>\n              <option value=\"offer\">Offer</option>\n              <option value=\"rejected\">Rejected</option>\n              <option value=\"no-openings\">No Openings</option>\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"\">Next Steps</label>\n            <select\n              id=\"next-steps\"\n              name=\"next-steps-list\"\n              value={nextSteps}\n              form=\"next-steps-form\"\n            >\n              <option value=\"review\">\n                Review Company/ Review Opportunities\n              </option>\n              <option value=\"prep-phone-screen\">\n                {\" \"}\n                Prepare For Phone Screen\n              </option>\n              <option value=\"prep-phone-intrview\">\n                Prepare For Phone Interview\n              </option>\n              <option value=\"comoplete-assignment\">Complete Assignment</option>\n              <option value=\"prep-interview\">Prepare for Interview</option>\n              <option value=\"accept-decline\">Accept/Decline Offer</option>\n              <option value=\"feedback\">Ask For Feedback</option>\n              <option value=\"none\">None/ N/A</option>\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"\">By</label>\n            <input\n              onChange={this.handleChange}\n              type=\"date\"\n              name=\"nextStepsDate\"\n              value={nextStepsDate}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Notes</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"jobNotes\"\n              value={jobNotes}\n            />\n          </div>\n          <button className=\"buttons\" id=\"add-job\"  type=\"submit\">\n            Save\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(EditJobCntr);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport JobModel from \"../../../models/jobModel\";\n\n\nclass NewJobCntr extends React.Component {\n  state = {\n    applicationDate: Date(),\n    applicationStatus: \"\",\n\n    nextSteps: \"\",\n    nextStepsDate: Date(),\n\n    jobTitle: \"\",\n    jobURL: \"\",\n    jobLocation: \"\",\n    jobDescription: \"\",\n\n    jobNotes: \"\",\n  };\n\n  handleChage = (event) => {\n    console.log(event.target.id);\n    if (event.target.value === \"on\") {\n      event.target.value = true;\n    }\n\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let companyId = this.props.match.params.co_id\n    console.log(this.props, \"this is props\")\n    console.log(companyId)\n    JobModel.createJob(companyId, this.state)\n    .then((result) => {\n      console.log(result, \"this is the resulttttttttttttt\");\n      this.props.history.goBack();\n    });\n  };\n\n\n  render() {\n    return (\n      <div className=\"new-job\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>Add A New Job</h2>\n          <div>\n            <label htmlFor=\"\">Job Title</label>\n            <input onInput={this.handleChage} type=\"text\" name=\"jobTitle\" />\n          </div>\n          <div>\n            <label htmlFor=\"\">Job Posting</label>\n            <input onInput={this.handleChage} type=\"url\" name=\"jobURL\" />\n          </div>\n          <div>\n            <label htmlFor=\"\">Job Location</label>\n            <input onInput={this.handleChage} type=\"text\" name=\"jobLocation\" />\n          </div>\n          <div>\n            <label htmlFor=\"\">Job Description</label>\n            <input onInput={this.handleChage} type=\"text\" name=\"jobDescription\" />\n          </div>\n          <div>\n            <label htmlFor=\"\">Applied On </label>\n            <input onInput={this.handleChage} type=\"date\" name=\"applicationDate\" />\n          </div>\n          <div>\n            <label htmlFor=\"\">Application Status</label>\n            <input onInput={this.handleChage} type=\"text\" name=\"applicationStatus\" />\n            {/* <select onInput={this.handleChage} id=\"application-status\" name=\"app-stat-list\" form=\"app-stat-form\">\n              <option value=\"interested\">Interested</option>\n              <option value=\"applied\">Applied</option>\n              <option value=\"phone-creen\">Phone Screen</option>\n              <option value=\"phone-interview\">Phone Interview</option>\n              <option value=\"test-hW\">Test/HW</option>\n              <option value=\"in-person-zoom\">In Person/Zoom</option>\n              <option value=\"offer\">Offer</option>\n              <option value=\"rejected\">Rejected</option>\n              <option value=\"no-openings\">No Openings</option>\n            </select> */}\n          </div>\n          <div>\n            <label htmlFor=\"\">Next Steps</label>\n            <input onInput={this.handleChage} type=\"text\" name=\"nextSteps\" />\n            {/* <select onInput={this.handleChage} id=\"next-steps\" name=\"next-steps-list\" form=\"next-steps-form\">\n              <option value=\"review\">Review Company/ Review Opportunities</option>\n              <option value=\"prep-phone-screen\"> Prepare For Phone Screen</option>\n              <option value=\"prep-phone-intrview\">Prepare For Phone Interview</option>\n              <option value=\"comoplete-assignment\">Complete Assignment</option>\n              <option value=\"prep-interview\">Prepare for Interview</option>\n              <option value=\"accept-decline\">Accept/Decline Offer</option>\n              <option value=\"feedback\">Ask For Feedback</option>\n              <option value=\"none\">None/ N/A</option>\n            </select> */}\n          </div>\n          <div>\n            <label htmlFor=\"\">By</label>\n            <input onInput={this.handleChage} type=\"date\" name=\"nextStepsDate\" />\n          </div>\n          <div>\n            <label htmlFor=\"\">Notes</label>\n            <input onInput={this.handleChage} type=\"text\" name=\"jobNotes\" />\n          </div>\n          <button className=\"buttons\" id=\"add-job\" type=\"submit\">Add Job</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(NewJobCntr);\n","import React from \"react\";\n\nimport JobModel from \"../../../models/jobModel\";\n\nconst JobDelete = (props) => {\n  let goBack = () => props.history.goBack();\n  let jobId = props.match.params.id;\n  console.log(props)\n  console.log(props.match.params.id);\n  return (\n    <div className=\"\">\n      Are you sure you want to delete this Job?\n      <br />\n      <button onClick={goBack}>Back</button>\n      <button onClick={() => JobModel.deleteJob(jobId).then(goBack)}\n      >Delete\n      </button>\n    </div>\n  );\n};\n\nexport default JobDelete;\n","import React from \"react\";\n\nimport JobModel from \"../../../models/jobModel\";\nimport JobList from \"../../../components/zApplicationDetails/Job/JobList\";\n\nclass JobListCntr extends React.Component {\n  state = {\n    jobs: [],\n  };\n\n  componentDidMount() {\n    // console.log(\"JOB #4 hello from inside comp did mount\");\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    JobModel.getAllJobs().then((data) => {\n      // console.log(\"JOB #5 this is the data fetched\", data);\n      this.setState({ jobs: data });\n    });\n  };\n\n  render() {\n    // console.log(\"JOB #1 and #2 hello in render\", this.state.jobs);\n    return (\n      <div>\n        {/* <p>JOB hello in the paragraph</p> */}\n        <JobList jobs={this.state.jobs}/>\n      </div>\n    );\n  }\n}\n\nexport default JobListCntr;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ConnectionModel from \"../../../models/connectionModel\";\n\n\nclass EditConnectionCntr extends React.Component {\n  state = {\n    connectionName: \"\",\n    connectionEmail: \"\",\n    connectionLinkedin: \"\",\n  };\n  \n  componentDidMount() {\n    let companyId = this.props.match.params.co_id\n    let connectionId = this.props.match.params.id\n    console.log(companyId)\n    console.log(connectionId)\n\n    ConnectionModel.getConnectionById(companyId, connectionId)\n      .then((result) => {\n        // console.log(result, \"this is the result -------\")\n        this.setState(result)\n      })\n      .catch((err) => console.log(err));\n  }\n\n  handleChage = (event) => {\n    console.log(event.target.id);\n    if (event.target.value === \"on\") {\n      event.target.value = true;\n    }\n\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let companyId = this.props.match.params.co_id\n    let connectionId = this.props.match.params.id\n    ConnectionModel.updateConnection(companyId, this.state, connectionId)\n    .then((result) => {\n      console.log(this.props);\n      console.log(this.props.match.params.id)\n      console.log(result);\n    });\n    this.props.history.goBack();\n  };\n\n\n  render() {\n    console.log(this.state, \"----------\")\n    const { connectionName, connectionEmail, connectionLinkedin } = this.state;\n    return (\n      <div className=\"new-connection\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>Edit Connection</h2>\n          <div>\n            <label htmlFor=\"\">Name</label>\n            <input\n              onChange={this.handleChage}\n              type=\"text\"\n              name=\"connectionName\"\n              value={connectionName}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Email Address </label>\n            <input\n              onChange={this.handleChage}\n              type=\"email\"\n              name=\"connectionEmail\"\n              value={connectionEmail}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Linkedin Profile </label>\n            <input\n              onChange={this.handleChage}\n              type=\"url\"\n              name=\"connectionLinkedin\"\n              value={connectionLinkedin}\n            />\n          </div>\n          <button className=\"buttons\" id=\"add-connection\" type=\"submit\">\n            Save{\" \"}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(EditConnectionCntr);\n\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ConnectionModel from \"../../../models/connectionModel\";\n\n\nclass NewConnectionCntr extends React.Component {\n  state = {\n    connectionName: '',\n    connectionEmail: '',\n    connectionLinkedin: '',\n  }\n\n  handleChange = (event) => {\n    console.log(event.target.id);\n    if (event.target.value === 'on') {\n      event.target.value = true;\n    }\n    \n    this.setState({[event.target.name]: event.target.value})\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let companyId = this.props.match.params.co_id\n    console.log(this.props, \"this is props\")\n    console.log(companyId)\n    ConnectionModel.createConnection(companyId, this.state)\n      .then((result) => {\n        console.log(result, \"this is the resulttttttttttttt\");\n        // this.props.history.push(`/companies/${companyId}`)\n        this.props.history.goBack();\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"new-connection\">\n        <form onSubmit={this.handleSubmit}>\n          <h2>Add A New Connection</h2>\n          <div>\n            <label htmlFor=\"\">Name</label>\n            <input\n              onInput={this.handleChange}\n              type=\"text\"\n              name=\"connectionName\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Email Address </label>\n            <input\n              onInput={this.handleChange}\n              type=\"email\"\n              name=\"connectionEmail\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Linkedin Profile </label>\n            <input\n              onInput={this.handleChange}\n              type=\"url\"\n              name=\"connectionLinkedin\"\n            />\n          </div>\n          <button className=\"buttons\" id=\"add-connection\"  type=\"submit\">\n            Add Connection{\" \"}\n          </button>\n        </form>\n      </div>\n    );\n  };\n}\n\nexport default withRouter(NewConnectionCntr);\n\n","import React from \"react\";\n\nimport ConnectionModel from \"../../../models/connectionModel\";\n\n\nconst ConnectionDelete = (props) => {\n  let goBack = () => props.history.goBack();\n  let connectionId= props.match.params.id\n  console.log(props)\n  console.log(props.match.params.id);\n  return (\n    <div className=\"\">\n      Are you sure you want to delete this Connection?\n      <br />\n      <button onClick={goBack}>Back</button>\n      <button onClick={() => ConnectionModel.deleteConnection(connectionId).then(goBack)}>Delete</button>\n    </div>\n  );\n};\n\nexport default ConnectionDelete;\n","import React from 'react'\n\nimport ConnectionModel from '../../../models/connectionModel'\nimport ConnectionList from '../../../components/zApplicationDetails/Connection/ConnectionList'\n\n\nclass ConnectionListCntr extends React.Component {\n  state = {\n    connections: [],\n  };\n\n  componentDidMount() {\n    // console.log(\"CONNECTION #4 hello from inside comp did mount\");\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    ConnectionModel.getAllConnections().then((data) => {\n      // console.log(\"CONNECTION #5 this is the data fetched\", data);\n      this.setState({ connections: data });\n    });\n  };\n\n  render() {\n    // console.log(\"CONNECTION #1 and #2 hello in render\", this.state.connections);\n    return (\n      <div>\n        {/* <p>CONNECTION hello in the paragraph</p> */}\n        <ConnectionList connections={this.state.connections}/>\n      </div>\n    );\n  }\n}\n\nexport default ConnectionListCntr;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from \"../components/zApplicationDetails/Home\"\n// import ApplicationDetails from \"../components/zApplicationDetails/ApplicationDetails\"\n\nimport CompanyContainer from '../pages/Company/CompanyCntr/CompanyCntr'\nimport EditCompanyCntr from \"../pages/Company/CompanyCntr/EditCompanyCntr\";\nimport NewCompanyCntr from \"../pages/Company/CompanyCntr/NewCompanyCntr\";\nimport CompanyDelete from \"../components/zApplicationDetails/Company/CompanyDelete.js\";\nimport CompanyListCntr from \"../pages/Company/CompanyListCntr/CompanyListCntr\"\n\nimport EditJobCntr from \"../pages/Job/JobCntr/EditJobCntr\";\nimport NewJobCntr from \"../pages/Job/JobCntr/NewJobCntr\";\nimport JobDelete from \"../components/zApplicationDetails/Job/JobDelete.js\";\nimport JobListCntr from '../pages/Job/JobListCntr/JobListCntr'\n\nimport EditConnectionCntr from \"../pages/Connection/ConnectionCntr/EditConnectionCntr\";\nimport NewConnectionCntr from \"../pages/Connection/ConnectionCntr/NewConnectionCntr\";\nimport ConnectionDelete from \"../components/zApplicationDetails/Connection/ConnectionDelete.js\";\nimport ConnectionListCntr from '../pages/Connection/ConnectionListCntr/ConnectionListCntr';\n\n\nexport default () => {\n  return (\n    <Switch>\n      {/* <Route path=\"/jobs/details/:jobid\" render={({ match }) => <JobDetails match={match} currentUser={currentUser} history={history} />} /> */}\n      <Route exact path=\"/\" component={Home} />\n      {/* <Route exact path=\"/\" component={ApplicationDetails} /> */}\n\n      {/* COMPANY COMPANY COMPANY COMPANY COMPANY COMPANY COMPANY COMPANY COMPANY COMPANY */}\n      <Route exact path=\"/companies/new\" component={NewCompanyCntr} />\n      <Route exact path=\"/companies/:id\" component={CompanyContainer} />\n      <Route exact path=\"/companies/:id/edit\" component={EditCompanyCntr} />\n      <Route exact path=\"/companies/:id/delete\" component={CompanyDelete} />\n      <Route exact path=\"/companies\" component={CompanyListCntr} />\n\n      {/* JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB JOB */}\n      <Route exact path=\"/companies/:co_id/jobs/:id/edit\" component={EditJobCntr} />\n      <Route exact path=\"/companies/:co_id/jobs/new\" component={NewJobCntr} />\n      <Route exact path=\"/jobs/:id/delete\" component={JobDelete} />\n      <Route exact path=\"/jobs\" component={JobListCntr} />\n\n      {/* CONNECTION CONNECTION CONNECTION CONNECTION CONNECTION CONNECTION CONNECTION CONNECTION */}\n      <Route exact path=\"/companies/:co_id/connections/:id/edit\" component={EditConnectionCntr} />\n      <Route exact path=\"/companies/:co_id/connections/new\" component={NewConnectionCntr} />\n      <Route exact path=\"/connections/:id/delete\" component={ConnectionDelete} />\n      <Route exact path=\"/connections\" component={ConnectionListCntr} />\n    </Switch>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Navbar from './components/Navbar/Navbar';\nimport Routes from './config/routes';\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <Routes />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router } from \"react-router-dom\"\n\n\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}